package ve;

import javafx.scene.paint.*;
import javafx.scene.shape.*;
import ve.utilities.Matrix4x3;
import ve.utilities.U;

public class Piece {

 protected final TriangleMesh TM = new TriangleMesh();
 public MeshView MV;
 public final PhongMaterial PM = new PhongMaterial();
 public boolean visible;
 protected boolean light;
 protected boolean selfIlluminate;
 protected boolean blink;
 protected boolean controller;
 protected boolean base;
 protected long flickPolarity;
 protected final double[] RGB = new double[3];
 protected double renderRadius;
 protected double displaceX;
 protected double displaceY;
 protected double displaceZ;
 protected double size;
 public double fastCull = Double.NaN;
 protected Matrix4x3 matrix;

 protected void setDisplacement(double[] X, double[] Y, double[] Z, int vertexQuantity) {
  double rangeNegativeX = X[0], rangePositiveX = X[0], rangeNegativeY = Y[0], rangePositiveY = Y[0], rangeNegativeZ = Z[0], rangePositiveZ = Z[0];
  int n;
  for (n = vertexQuantity; --n > 0; ) {
   rangeNegativeX = Math.min(rangeNegativeX, X[n]);
   rangePositiveX = Math.max(rangePositiveX, X[n]);
   rangeNegativeY = Math.min(rangeNegativeY, Y[n]);
   rangePositiveY = Math.max(rangePositiveY, Y[n]);
   rangeNegativeZ = Math.min(rangeNegativeZ, Z[n]);
   rangePositiveZ = Math.max(rangePositiveZ, Z[n]);
  }
  displaceX = (rangeNegativeX + rangePositiveX) * .5;
  displaceY = (rangeNegativeY + rangePositiveY) * .5;
  displaceZ = (rangeNegativeZ + rangePositiveZ) * .5;
  for (n = vertexQuantity; --n >= 0; ) {
   X[n] -= displaceX;
   Y[n] -= displaceY;
   Z[n] -= displaceZ;
  }
 }

 protected void setRenderSizeRequirement(boolean showAlways, double[] inX, double[] inY, double[] inZ, int vertexQuantity) {
  if (showAlways) {
   size = Double.POSITIVE_INFINITY;
  } else {
   int n;
   double xx = inX[0], yy = inY[0], zz = inZ[0];
   for (n = vertexQuantity; --n > 0; ) {
    xx += inX[n];
    yy += inY[n];
    zz += inZ[n];
   }
   xx /= vertexQuantity;
   yy /= vertexQuantity;
   zz /= vertexQuantity;
   size = U.distance(inX[0], xx, inY[0], yy, inZ[0], zz);
   for (n = vertexQuantity; --n > 0; ) {
    size += U.distance(inX[n], xx, inY[n], yy, inZ[n], zz);
   }
   size /= vertexQuantity;
  }
 }

 protected void setFaces(long vertexQuantity) {
  if (vertexQuantity == 3) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2,
    0, 0, 2, 2, 1, 1);
  } else if (vertexQuantity == 4) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 0, 0,
    0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 3, 3);
  } else if (vertexQuantity == 5) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3);
  } else if (vertexQuantity == 6) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 0, 0, 0, 0, 2, 2, 4, 4,
    0, 0, 2, 2, 1, 1, 2, 2, 4, 4, 3, 3, 4, 4, 0, 0, 5, 5, 0, 0, 4, 4, 2, 2);
  } else if (vertexQuantity == 7) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5);
  } else if (vertexQuantity == 8) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 0, 0, 0, 0, 2, 2, 4, 4, 4, 4, 6, 6, 0, 0,
    0, 0, 2, 2, 1, 1, 2, 2, 4, 4, 3, 3, 4, 4, 6, 6, 5, 5, 6, 6, 0, 0, 7, 7, 0, 0, 4, 4, 2, 2, 4, 4, 0, 0, 6, 6);
  } else if (vertexQuantity == 9) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7);
  } else if (vertexQuantity == 10) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8);
  } else if (vertexQuantity == 11) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9);
  } else if (vertexQuantity == 12) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 11, 11, 0, 0, 0, 0, 2, 2, 4, 4, 4, 4, 6, 6, 8, 8, 8, 8, 10, 10, 0, 0, 0, 0, 4, 4, 8, 8,
    0, 0, 2, 2, 1, 1, 2, 2, 4, 4, 3, 3, 4, 4, 6, 6, 5, 5, 6, 6, 8, 8, 7, 7, 8, 8, 10, 10, 9, 9, 10, 10, 0, 0, 11, 11, 0, 0, 4, 4, 2, 2, 4, 4, 8, 8, 6, 6, 8, 8, 0, 0, 10, 10, 0, 0, 8, 8, 4, 4);
  } else if (vertexQuantity == 13) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11);
  } else if (vertexQuantity == 14) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12);
  } else if (vertexQuantity == 15) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13);
  } else if (vertexQuantity == 16) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 0, 0, 0, 0, 2, 2, 4, 4, 4, 4, 6, 6, 8, 8, 8, 8, 10, 10, 12, 12, 12, 12, 14, 14, 0, 0, 0, 0, 4, 4, 8, 8, 8, 8, 12, 12, 0, 0,
    0, 0, 2, 2, 1, 1, 2, 2, 4, 4, 3, 2, 4, 4, 6, 6, 5, 5, 6, 6, 8, 8, 7, 7, 8, 8, 10, 10, 9, 9, 10, 10, 12, 12, 11, 11, 12, 12, 14, 14, 13, 13, 14, 14, 0, 0, 15, 15, 0, 0, 4, 4, 2, 2, 4, 4, 8, 8, 6, 6, 8, 8, 12, 12, 10, 10, 12, 12, 0, 0, 14, 14, 0, 0, 8, 8, 4, 4, 8, 8, 0, 0, 12, 12);
  } else if (vertexQuantity == 17) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15);
  } else if (vertexQuantity == 18) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16);
  } else if (vertexQuantity == 19) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17);
  } else if (vertexQuantity == 20) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18);
  } else if (vertexQuantity == 21) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19);
  } else if (vertexQuantity == 22) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20);
  } else if (vertexQuantity == 23) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21);
  } else if (vertexQuantity == 24) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 16, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 22, 22, 22, 22, 23, 23, 0, 0, 0, 0, 2, 2, 4, 4, 4, 4, 6, 6, 8, 8, 8, 8, 10, 10, 12, 12, 12, 12, 14, 14, 16, 16, 16, 16, 18, 18, 20, 20, 20, 20, 22, 22, 0, 0, 0, 0, 4, 4, 8, 8, 8, 8, 12, 12, 16, 16, 16, 16, 20, 20, 0, 0, 0, 0, 8, 8, 16, 16,
    0, 0, 2, 2, 1, 1, 2, 2, 4, 4, 3, 3, 4, 4, 6, 6, 5, 5, 6, 6, 8, 8, 7, 7, 8, 8, 10, 10, 9, 9, 10, 10, 12, 12, 11, 11, 12, 12, 14, 14, 13, 13, 14, 14, 16, 16, 15, 15, 16, 16, 18, 18, 17, 17, 18, 18, 20, 20, 19, 19, 20, 20, 22, 22, 21, 21, 22, 22, 0, 0, 23, 23, 0, 0, 4, 4, 2, 2, 4, 4, 8, 8, 6, 6, 8, 8, 12, 12, 10, 10, 12, 12, 16, 16, 14, 14, 16, 16, 20, 20, 18, 18, 20, 20, 0, 0, 22, 22, 0, 0, 8, 8, 4, 4, 8, 8, 16, 16, 12, 12, 16, 16, 0, 0, 20, 20, 0, 0, 16, 16, 8, 8);
  } else if (vertexQuantity == 25) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 24, 24,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 24, 24, 23, 23);
  } else if (vertexQuantity == 26) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 24, 24, 0, 0, 24, 24, 25, 25,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 24, 24, 23, 23, 0, 0, 25, 25, 24, 24);
  } else if (vertexQuantity == 27) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 24, 24, 0, 0, 24, 24, 25, 25, 0, 0, 25, 25, 26, 26,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 24, 24, 23, 23, 0, 0, 25, 25, 24, 24, 0, 0, 26, 26, 25, 25);
  }
 }

 protected void setConic(long vertexQuantity) {
  if (vertexQuantity == 4) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 1, 1, 3, 3);
  } else if (vertexQuantity == 5) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 1, 1, 4, 4);
  } else if (vertexQuantity == 6) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 1, 1, 5, 5);
  } else if (vertexQuantity == 7) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 1, 1, 6, 6);
  } else if (vertexQuantity == 8) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 1, 1, 7, 7);
  } else if (vertexQuantity == 9) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 1, 1, 8, 8);
  } else if (vertexQuantity == 10) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 1, 1, 9, 9);
  } else if (vertexQuantity == 11) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 1, 1, 10, 10);
  } else if (vertexQuantity == 12) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 1, 1, 11, 11);
  } else if (vertexQuantity == 13) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 1, 1, 12, 12);
  } else if (vertexQuantity == 14) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 1, 1, 13, 13);
  } else if (vertexQuantity == 15) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 1, 1, 14, 14);
  } else if (vertexQuantity == 16) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 1, 1, 15, 15);
  } else if (vertexQuantity == 17) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 1, 1, 16, 16);
  } else if (vertexQuantity == 18) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 1, 1, 17, 17);
  } else if (vertexQuantity == 19) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 1, 1, 18, 18);
  } else if (vertexQuantity == 20) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 1, 1, 19, 19);
  } else if (vertexQuantity == 24) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 1, 1, 23, 23);
  } else if (vertexQuantity == 25) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 24, 24, 0, 0, 24, 24, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 24, 24, 23, 23, 0, 0, 1, 1, 24, 24);
  } else if (vertexQuantity == 28) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 24, 24, 0, 0, 24, 24, 25, 25, 0, 0, 25, 25, 26, 26, 0, 0, 26, 26, 27, 27, 0, 0, 27, 27, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 24, 24, 23, 23, 0, 0, 25, 25, 24, 24, 0, 0, 26, 26, 25, 25, 0, 0, 27, 27, 26, 26, 0, 0, 1, 1, 27, 27);
  } else if (vertexQuantity == 37) {
   TM.getFaces().addAll(0, 0, 1, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 3, 3, 4, 4, 0, 0, 4, 4, 5, 5, 0, 0, 5, 5, 6, 6, 0, 0, 6, 6, 7, 7, 0, 0, 7, 7, 8, 8, 0, 0, 8, 8, 9, 9, 0, 0, 9, 9, 10, 10, 0, 0, 10, 10, 11, 11, 0, 0, 11, 11, 12, 12, 0, 0, 12, 12, 13, 13, 0, 0, 13, 13, 14, 14, 0, 0, 14, 14, 15, 15, 0, 0, 15, 15, 16, 16, 0, 0, 16, 16, 17, 17, 0, 0, 17, 17, 18, 18, 0, 0, 18, 18, 19, 19, 0, 0, 19, 19, 20, 20, 0, 0, 20, 20, 21, 21, 0, 0, 21, 21, 22, 22, 0, 0, 22, 22, 23, 23, 0, 0, 23, 23, 24, 24, 0, 0, 24, 24, 25, 25, 0, 0, 25, 25, 26, 26, 0, 0, 26, 26, 27, 27, 0, 0, 27, 27, 28, 28, 0, 0, 28, 28, 29, 29, 0, 0, 29, 29, 30, 30, 0, 0, 30, 30, 31, 31, 0, 0, 31, 31, 32, 32, 0, 0, 32, 32, 33, 33, 0, 0, 33, 33, 34, 34, 0, 0, 34, 34, 35, 35, 0, 0, 35, 35, 36, 36, 0, 0, 36, 36, 1, 1,
    0, 0, 2, 2, 1, 1, 0, 0, 3, 3, 2, 2, 0, 0, 4, 4, 3, 3, 0, 0, 5, 5, 4, 4, 0, 0, 6, 6, 5, 5, 0, 0, 7, 7, 6, 6, 0, 0, 8, 8, 7, 7, 0, 0, 9, 9, 8, 8, 0, 0, 10, 10, 9, 9, 0, 0, 11, 11, 10, 10, 0, 0, 12, 12, 11, 11, 0, 0, 13, 13, 12, 12, 0, 0, 14, 14, 13, 13, 0, 0, 15, 15, 14, 14, 0, 0, 16, 16, 15, 15, 0, 0, 17, 17, 16, 16, 0, 0, 18, 18, 17, 17, 0, 0, 19, 19, 18, 18, 0, 0, 20, 20, 19, 19, 0, 0, 21, 21, 20, 20, 0, 0, 22, 22, 21, 21, 0, 0, 23, 23, 22, 22, 0, 0, 24, 24, 23, 23, 0, 0, 25, 25, 24, 24, 0, 0, 26, 26, 25, 25, 0, 0, 27, 27, 26, 26, 0, 0, 28, 28, 27, 27, 0, 0, 29, 29, 28, 28, 0, 0, 30, 30, 29, 29, 0, 0, 31, 31, 30, 30, 0, 0, 32, 32, 31, 31, 0, 0, 33, 33, 32, 32, 0, 0, 34, 34, 33, 33, 0, 0, 35, 35, 34, 34, 0, 0, 36, 36, 35, 35, 0, 0, 1, 1, 36, 36);
  }
 }

 protected void setCylindric(long vertexQuantity) {
  if (vertexQuantity == 6) {
   TM.getFaces().addAll(0, 0, 1, 1, 4, 4, 1, 1, 2, 2, 5, 5, 2, 2, 0, 0, 3, 3,
    0, 0, 3, 3, 4, 4, 1, 1, 4, 4, 5, 5, 2, 2, 5, 5, 3, 3);
   TM.getFaces().addAll(0, 0, 4, 4, 1, 1, 1, 1, 5, 5, 2, 2, 2, 2, 3, 3, 0, 0,
    0, 0, 4, 4, 3, 3, 1, 1, 5, 5, 4, 4, 2, 2, 3, 3, 5, 5);
  } else if (vertexQuantity == 8) {
   TM.getFaces().addAll(0, 0, 1, 1, 5, 5, 1, 1, 2, 2, 6, 6, 2, 2, 3, 3, 7, 7, 3, 3, 0, 0, 4, 4,
    0, 0, 4, 4, 5, 5, 1, 1, 5, 5, 6, 6, 2, 2, 6, 6, 7, 7, 3, 3, 7, 7, 4, 4);
   TM.getFaces().addAll(0, 0, 5, 5, 1, 1, 1, 1, 6, 6, 2, 2, 2, 2, 7, 7, 3, 3, 3, 3, 4, 4, 0, 0,
    0, 0, 5, 5, 4, 4, 1, 1, 6, 6, 5, 5, 2, 2, 7, 7, 6, 6, 3, 3, 4, 4, 7, 7);
  } else if (vertexQuantity == 10) {
   TM.getFaces().addAll(0, 0, 1, 1, 6, 6, 1, 1, 2, 2, 7, 7, 2, 2, 3, 3, 8, 8, 3, 3, 4, 4, 9, 9, 4, 4, 0, 0, 5, 5,
    0, 0, 5, 5, 6, 6, 1, 1, 6, 6, 7, 7, 2, 2, 7, 7, 8, 8, 3, 3, 8, 8, 9, 9, 4, 4, 9, 9, 5, 5);
   TM.getFaces().addAll(0, 0, 6, 6, 1, 1, 1, 1, 7, 7, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 9, 9, 4, 4, 4, 4, 5, 5, 0, 0,
    0, 0, 6, 6, 5, 5, 1, 1, 7, 7, 6, 6, 2, 2, 8, 8, 7, 7, 3, 3, 9, 9, 8, 8, 4, 4, 5, 5, 9, 9);
  } else if (vertexQuantity == 12) {
   TM.getFaces().addAll(0, 0, 1, 1, 7, 7, 1, 1, 2, 2, 8, 8, 2, 2, 3, 3, 9, 9, 3, 3, 4, 4, 10, 10, 4, 4, 5, 5, 11, 11, 5, 5, 0, 0, 6, 6,
    0, 0, 6, 6, 7, 7, 1, 1, 7, 7, 8, 8, 2, 2, 8, 8, 9, 9, 3, 3, 9, 9, 10, 10, 4, 4, 10, 10, 11, 11, 5, 5, 11, 11, 6, 6);
   TM.getFaces().addAll(0, 0, 7, 7, 1, 1, 1, 1, 8, 8, 2, 2, 2, 2, 9, 9, 3, 3, 3, 3, 10, 10, 4, 4, 4, 4, 11, 11, 5, 5, 5, 5, 6, 6, 0, 0,
    0, 0, 7, 7, 6, 6, 1, 1, 8, 8, 7, 7, 2, 2, 9, 9, 8, 8, 3, 3, 10, 10, 9, 9, 4, 4, 11, 11, 10, 10, 5, 5, 6, 6, 11, 11);
  } else if (vertexQuantity == 16) {
   TM.getFaces().addAll(0, 0, 1, 1, 9, 9, 1, 1, 2, 2, 10, 10, 2, 2, 3, 3, 11, 11, 3, 3, 4, 4, 12, 12, 4, 4, 5, 5, 13, 13, 5, 5, 6, 6, 14, 14, 6, 6, 7, 7, 15, 15, 7, 7, 0, 0, 8, 8,
    0, 0, 8, 8, 9, 9, 1, 1, 9, 9, 10, 10, 2, 2, 10, 10, 11, 11, 3, 3, 11, 11, 12, 12, 4, 4, 12, 12, 13, 13, 5, 5, 13, 13, 14, 14, 6, 6, 14, 14, 15, 15, 7, 7, 15, 15, 8, 8);
   TM.getFaces().addAll(0, 0, 9, 9, 1, 1, 1, 1, 10, 10, 2, 2, 2, 2, 11, 11, 3, 3, 3, 3, 12, 12, 4, 4, 4, 4, 13, 13, 5, 5, 5, 5, 14, 14, 6, 6, 6, 6, 15, 15, 7, 7, 7, 7, 8, 8, 0, 0,
    0, 0, 9, 9, 8, 8, 1, 1, 10, 10, 9, 9, 2, 2, 11, 11, 10, 10, 3, 3, 12, 12, 11, 11, 4, 4, 13, 13, 12, 12, 5, 5, 14, 14, 13, 13, 6, 6, 15, 15, 14, 14, 7, 7, 8, 8, 15, 15);
  } else if (vertexQuantity == 20) {
   TM.getFaces().addAll(0, 0, 1, 1, 11, 11, 1, 1, 2, 2, 12, 12, 2, 2, 3, 3, 13, 13, 3, 3, 4, 4, 14, 14, 4, 4, 5, 5, 15, 15, 5, 5, 6, 6, 16, 16, 6, 6, 7, 7, 17, 17, 7, 7, 8, 8, 18, 18, 8, 8, 9, 9, 19, 19, 9, 9, 0, 0, 10, 10,
    0, 0, 10, 10, 11, 11, 1, 1, 11, 11, 12, 12, 2, 2, 12, 12, 13, 13, 3, 3, 13, 13, 14, 14, 4, 4, 14, 14, 15, 15, 5, 5, 15, 15, 16, 16, 6, 6, 16, 16, 17, 17, 7, 7, 17, 17, 18, 18, 8, 8, 18, 18, 19, 19, 9, 9, 19, 19, 10, 10);
   TM.getFaces().addAll(0, 0, 11, 11, 1, 1, 1, 1, 12, 12, 2, 2, 2, 2, 13, 13, 3, 3, 3, 3, 14, 14, 4, 4, 4, 4, 15, 15, 5, 5, 5, 5, 16, 16, 6, 6, 6, 6, 17, 17, 7, 7, 7, 7, 18, 18, 8, 8, 8, 8, 19, 19, 9, 9, 9, 9, 10, 10, 0, 0,
    0, 0, 11, 11, 10, 10, 1, 1, 12, 12, 11, 11, 2, 2, 13, 13, 12, 12, 3, 3, 14, 14, 13, 13, 4, 4, 15, 15, 14, 14, 5, 5, 16, 16, 15, 15, 6, 6, 17, 17, 16, 16, 7, 7, 18, 18, 17, 17, 8, 8, 19, 19, 18, 18, 9, 9, 10, 10, 19, 19);
  } else if (vertexQuantity == 24) {
   TM.getFaces().addAll(0, 0, 1, 1, 13, 13, 1, 1, 2, 2, 14, 14, 2, 2, 3, 3, 15, 15, 3, 3, 4, 4, 16, 16, 4, 4, 5, 5, 17, 17, 5, 5, 6, 6, 18, 18, 6, 6, 7, 7, 19, 19, 7, 7, 8, 8, 20, 20, 8, 8, 9, 9, 21, 21, 9, 9, 10, 10, 22, 22, 10, 10, 11, 11, 23, 23, 11, 11, 0, 0, 12, 12,
    0, 0, 12, 12, 13, 13, 1, 1, 13, 13, 14, 14, 2, 2, 14, 14, 15, 15, 3, 3, 15, 15, 16, 16, 4, 4, 16, 16, 17, 17, 5, 5, 17, 17, 18, 18, 6, 6, 18, 18, 19, 19, 7, 7, 19, 19, 20, 20, 8, 8, 20, 20, 21, 21, 9, 9, 21, 21, 22, 22, 10, 10, 22, 22, 23, 23, 11, 11, 23, 23, 12, 12);
   TM.getFaces().addAll(0, 0, 13, 13, 1, 1, 1, 1, 14, 14, 2, 2, 2, 2, 15, 15, 3, 3, 3, 3, 16, 16, 4, 4, 4, 4, 17, 17, 5, 5, 5, 5, 18, 18, 6, 6, 6, 6, 19, 19, 7, 7, 7, 7, 20, 20, 8, 8, 8, 8, 21, 21, 9, 9, 9, 9, 22, 22, 10, 10, 10, 10, 23, 23, 11, 11, 11, 11, 12, 12, 0, 0,
    0, 0, 13, 13, 12, 12, 1, 1, 14, 14, 13, 13, 2, 2, 15, 15, 14, 14, 3, 3, 16, 16, 15, 15, 4, 4, 17, 17, 16, 16, 5, 5, 18, 18, 17, 17, 6, 6, 19, 19, 18, 18, 7, 7, 20, 20, 19, 19, 8, 8, 21, 21, 20, 20, 9, 9, 22, 22, 21, 21, 10, 10, 23, 23, 22, 22, 11, 11, 12, 12, 23, 23);
  } else if (vertexQuantity == 32) {
   TM.getFaces().addAll(0, 0, 1, 1, 17, 17, 1, 1, 2, 2, 18, 18, 2, 2, 3, 3, 19, 19, 3, 3, 4, 4, 20, 20, 4, 4, 5, 5, 21, 21, 5, 5, 6, 6, 22, 22, 6, 6, 7, 7, 23, 23, 7, 7, 8, 8, 24, 24, 8, 8, 9, 9, 25, 25, 9, 9, 10, 10, 26, 26, 10, 10, 11, 11, 27, 27, 11, 11, 12, 12, 28, 28, 12, 12, 13, 13, 29, 29, 13, 13, 14, 14, 30, 30, 14, 14, 15, 15, 31, 31, 15, 15, 0, 0, 16, 16,
    0, 0, 16, 16, 17, 17, 1, 1, 17, 17, 18, 18, 2, 2, 18, 18, 19, 19, 3, 3, 19, 19, 20, 20, 4, 4, 20, 20, 21, 21, 5, 5, 21, 21, 22, 22, 6, 6, 22, 22, 23, 23, 7, 7, 23, 23, 24, 24, 8, 8, 24, 24, 25, 25, 9, 9, 25, 25, 26, 26, 10, 10, 26, 26, 27, 27, 11, 11, 27, 27, 28, 28, 12, 12, 28, 28, 29, 29, 13, 13, 29, 29, 30, 30, 14, 14, 30, 30, 31, 31, 15, 15, 31, 31, 16, 16);
   TM.getFaces().addAll(0, 0, 17, 17, 1, 1, 1, 1, 18, 18, 2, 2, 2, 2, 19, 19, 3, 3, 3, 3, 20, 20, 4, 4, 4, 4, 21, 21, 5, 5, 5, 5, 22, 22, 6, 6, 6, 6, 23, 23, 7, 7, 7, 7, 24, 24, 8, 8, 8, 8, 25, 25, 9, 9, 9, 9, 26, 26, 10, 10, 10, 10, 27, 27, 11, 11, 11, 11, 28, 28, 12, 12, 12, 12, 29, 29, 13, 13, 13, 13, 30, 30, 14, 14, 14, 14, 31, 31, 15, 15, 15, 15, 16, 16, 0, 0,
    0, 0, 17, 17, 16, 16, 1, 1, 18, 18, 17, 17, 2, 2, 19, 19, 18, 18, 3, 3, 20, 20, 19, 19, 4, 4, 21, 21, 20, 20, 5, 5, 22, 22, 21, 21, 6, 6, 23, 23, 22, 22, 7, 7, 24, 24, 23, 23, 8, 8, 25, 25, 24, 24, 9, 9, 26, 26, 25, 25, 10, 10, 27, 27, 26, 26, 11, 11, 28, 28, 27, 27, 12, 12, 29, 29, 28, 28, 13, 13, 30, 30, 29, 29, 14, 14, 31, 31, 30, 30, 15, 15, 16, 16, 31, 31);
  } else if (vertexQuantity == 48) {
   TM.getFaces().addAll(0, 0, 1, 1, 25, 25, 1, 1, 2, 2, 26, 26, 2, 2, 3, 3, 27, 27, 3, 3, 4, 4, 28, 28, 4, 4, 5, 5, 29, 29, 5, 5, 6, 6, 30, 30, 6, 6, 7, 7, 31, 31, 7, 7, 8, 8, 32, 32, 8, 8, 9, 9, 33, 33, 9, 9, 10, 10, 34, 34, 10, 10, 11, 11, 35, 35, 11, 11, 12, 12, 36, 36, 12, 12, 13, 13, 37, 37, 13, 13, 14, 14, 38, 38, 14, 14, 15, 15, 39, 39, 15, 15, 16, 16, 40, 40, 16, 16, 17, 17, 41, 41, 17, 17, 18, 18, 42, 42, 18, 18, 19, 19, 43, 43, 19, 19, 20, 20, 44, 44, 20, 20, 21, 21, 45, 45, 21, 21, 22, 22, 46, 46, 22, 22, 23, 23, 47, 47, 23, 23, 0, 0, 24, 24,
    0, 0, 24, 24, 25, 25, 1, 1, 25, 25, 26, 26, 2, 2, 26, 26, 27, 27, 3, 3, 27, 27, 28, 28, 4, 4, 28, 28, 29, 29, 5, 5, 29, 29, 30, 30, 6, 6, 30, 30, 31, 31, 7, 7, 31, 31, 32, 32, 8, 8, 32, 32, 33, 33, 9, 9, 33, 33, 34, 34, 10, 10, 34, 34, 35, 35, 11, 11, 35, 35, 36, 36, 12, 12, 36, 36, 37, 37, 13, 13, 37, 37, 38, 38, 14, 14, 38, 38, 39, 39, 15, 15, 39, 39, 40, 40, 16, 16, 40, 40, 41, 41, 17, 17, 41, 41, 42, 42, 18, 18, 42, 42, 43, 43, 19, 19, 43, 43, 44, 44, 20, 20, 44, 44, 45, 45, 21, 21, 45, 45, 46, 46, 22, 22, 46, 46, 47, 47, 23, 23, 47, 47, 24, 24);
   TM.getFaces().addAll(0, 0, 25, 25, 1, 1, 1, 1, 26, 26, 2, 2, 2, 2, 27, 27, 3, 3, 3, 3, 28, 28, 4, 4, 4, 4, 29, 29, 5, 5, 5, 5, 30, 30, 6, 6, 6, 6, 31, 31, 7, 7, 7, 7, 32, 32, 8, 8, 8, 8, 33, 33, 9, 9, 9, 9, 34, 34, 10, 10, 10, 10, 35, 35, 11, 11, 11, 11, 36, 36, 12, 12, 12, 12, 37, 37, 13, 13, 13, 13, 38, 38, 14, 14, 14, 14, 39, 39, 15, 15, 15, 15, 40, 40, 16, 16, 16, 16, 41, 41, 17, 17, 17, 17, 42, 42, 18, 18, 18, 18, 43, 43, 19, 19, 19, 19, 44, 44, 20, 20, 20, 20, 45, 45, 21, 21, 21, 21, 46, 46, 22, 22, 22, 22, 47, 47, 23, 23, 23, 23, 24, 24, 0, 0,
    0, 0, 25, 25, 24, 24, 1, 1, 26, 26, 25, 25, 2, 2, 27, 27, 26, 26, 3, 3, 28, 28, 27, 27, 4, 4, 29, 29, 28, 28, 5, 5, 30, 30, 29, 29, 6, 6, 31, 31, 30, 30, 7, 7, 32, 32, 31, 31, 8, 8, 33, 33, 32, 32, 9, 9, 34, 34, 33, 33, 10, 10, 35, 35, 34, 34, 11, 11, 36, 36, 35, 35, 12, 12, 37, 37, 36, 36, 13, 13, 38, 38, 37, 37, 14, 14, 39, 39, 38, 38, 15, 15, 40, 40, 39, 39, 16, 16, 41, 41, 40, 40, 17, 17, 42, 42, 41, 41, 18, 18, 43, 43, 42, 42, 19, 19, 44, 44, 43, 43, 20, 20, 45, 45, 44, 44, 21, 21, 46, 46, 45, 45, 22, 22, 47, 47, 46, 46, 23, 23, 24, 24, 47, 47);
  } else if (vertexQuantity == 72) {
   TM.getFaces().addAll(0, 0, 1, 1, 37, 37, 1, 1, 2, 2, 38, 38, 2, 2, 3, 3, 39, 39, 3, 3, 4, 4, 40, 40, 4, 4, 5, 5, 41, 41, 5, 5, 6, 6, 42, 42, 6, 6, 7, 7, 43, 43, 7, 7, 8, 8, 44, 44, 8, 8, 9, 9, 45, 45, 9, 9, 10, 10, 46, 46, 10, 10, 11, 11, 47, 47, 11, 11, 12, 12, 48, 48, 12, 12, 13, 13, 49, 49, 13, 13, 14, 14, 50, 50, 14, 14, 15, 15, 51, 51, 15, 15, 16, 16, 52, 52, 16, 16, 17, 17, 53, 53, 17, 17, 18, 18, 54, 54, 18, 18, 19, 19, 55, 55, 19, 19, 20, 20, 56, 56, 20, 20, 21, 21, 57, 57, 21, 21, 22, 22, 58, 58, 22, 22, 23, 23, 59, 59, 23, 23, 24, 24, 60, 60, 24, 24, 25, 25, 61, 61, 25, 25, 26, 26, 62, 62, 26, 26, 27, 27, 63, 63, 27, 27, 28, 28, 64, 64, 28, 28, 29, 29, 65, 65, 29, 29, 30, 30, 66, 66, 30, 30, 31, 31, 67, 67, 31, 31, 32, 32, 68, 68, 32, 32, 33, 33, 69, 69, 33, 33, 34, 34, 70, 70, 34, 34, 35, 35, 71, 71, 35, 35, 0, 0, 36, 36,
    0, 0, 36, 36, 37, 37, 1, 1, 37, 37, 38, 38, 2, 2, 38, 38, 39, 39, 3, 3, 39, 39, 40, 40, 4, 4, 40, 40, 41, 41, 5, 5, 41, 41, 42, 42, 6, 6, 42, 42, 43, 43, 7, 7, 43, 43, 44, 44, 8, 8, 44, 44, 45, 45, 9, 9, 45, 45, 46, 46, 10, 10, 46, 46, 47, 47, 11, 11, 47, 47, 48, 48, 12, 12, 48, 48, 49, 49, 13, 13, 49, 49, 50, 50, 14, 14, 50, 50, 51, 51, 15, 15, 51, 51, 52, 52, 16, 16, 52, 52, 53, 53, 17, 17, 53, 53, 54, 54, 18, 18, 54, 54, 55, 55, 19, 19, 55, 55, 56, 56, 20, 20, 56, 56, 57, 57, 21, 21, 57, 57, 58, 58, 22, 22, 58, 58, 59, 59, 23, 23, 59, 59, 60, 60, 24, 24, 60, 60, 61, 61, 25, 25, 61, 61, 62, 62, 26, 26, 62, 62, 63, 63, 27, 27, 63, 63, 64, 64, 28, 28, 64, 64, 65, 65, 29, 29, 65, 65, 66, 66, 30, 30, 66, 66, 67, 67, 31, 31, 67, 67, 68, 68, 32, 32, 68, 68, 69, 69, 33, 33, 69, 69, 70, 70, 34, 34, 70, 70, 71, 71, 35, 35, 71, 71, 36, 36);
   TM.getFaces().addAll(0, 0, 37, 37, 1, 1, 1, 1, 38, 38, 2, 2, 2, 2, 39, 39, 3, 3, 3, 3, 40, 40, 4, 4, 4, 4, 41, 41, 5, 5, 5, 5, 42, 42, 6, 6, 6, 6, 43, 43, 7, 7, 7, 7, 44, 44, 8, 8, 8, 8, 45, 45, 9, 9, 9, 9, 46, 46, 10, 10, 10, 10, 47, 47, 11, 11, 11, 11, 48, 48, 12, 12, 12, 12, 49, 49, 13, 13, 13, 13, 50, 50, 14, 14, 14, 14, 51, 51, 15, 15, 15, 15, 52, 52, 16, 16, 16, 16, 53, 53, 17, 17, 17, 17, 54, 54, 18, 18, 18, 18, 55, 55, 19, 19, 19, 19, 56, 56, 20, 20, 20, 20, 57, 57, 21, 21, 21, 21, 58, 58, 22, 22, 22, 22, 59, 59, 23, 23, 23, 23, 60, 60, 24, 24, 24, 24, 61, 61, 25, 25, 25, 25, 62, 62, 26, 26, 26, 26, 63, 63, 27, 27, 27, 27, 64, 64, 28, 28, 28, 28, 65, 65, 29, 29, 29, 29, 66, 66, 30, 30, 30, 30, 67, 67, 31, 31, 31, 31, 68, 68, 32, 32, 32, 32, 69, 69, 33, 33, 33, 33, 70, 70, 34, 34, 34, 34, 71, 71, 35, 35, 35, 35, 36, 36, 0, 0,
    0, 0, 37, 37, 36, 36, 1, 1, 38, 38, 37, 37, 2, 2, 39, 39, 38, 38, 3, 3, 40, 40, 39, 39, 4, 4, 41, 41, 40, 40, 5, 5, 42, 42, 41, 41, 6, 6, 43, 43, 42, 42, 7, 7, 44, 44, 43, 43, 8, 8, 45, 45, 44, 44, 9, 9, 46, 46, 45, 45, 10, 10, 47, 47, 46, 46, 11, 11, 48, 48, 47, 47, 12, 12, 49, 49, 48, 48, 13, 13, 50, 50, 49, 49, 14, 14, 51, 51, 50, 50, 15, 15, 52, 52, 51, 51, 16, 16, 53, 53, 52, 52, 17, 17, 54, 54, 53, 53, 18, 18, 55, 55, 54, 54, 19, 19, 56, 56, 55, 55, 20, 20, 57, 57, 56, 56, 21, 21, 58, 58, 57, 57, 22, 22, 59, 59, 58, 58, 23, 23, 60, 60, 59, 59, 24, 24, 61, 61, 60, 60, 25, 25, 62, 62, 61, 61, 26, 26, 63, 63, 62, 62, 27, 27, 64, 64, 63, 63, 28, 28, 65, 65, 64, 64, 29, 29, 66, 66, 65, 65, 30, 30, 67, 67, 66, 66, 31, 31, 68, 68, 67, 67, 32, 32, 69, 69, 68, 68, 33, 33, 70, 70, 69, 69, 34, 34, 71, 71, 70, 70, 35, 35, 36, 36, 71, 71);
  }
 }

 protected void setStrip(long vertexQuantity) {
  if (vertexQuantity == 6) {
   TM.getFaces().addAll(0, 0, 1, 1, 4, 4, 1, 1, 2, 2, 5, 5,
    0, 0, 3, 3, 4, 4, 1, 1, 4, 4, 5, 5);
   TM.getFaces().addAll(0, 0, 4, 4, 1, 1, 1, 1, 5, 5, 2, 2,
    0, 0, 4, 4, 3, 3, 1, 1, 5, 5, 4, 4);
  } else if (vertexQuantity == 8) {
   TM.getFaces().addAll(0, 0, 1, 1, 5, 5, 1, 1, 2, 2, 6, 6, 2, 2, 3, 3, 7, 7,
    0, 0, 4, 4, 5, 5, 1, 1, 5, 5, 6, 6, 2, 2, 6, 6, 7, 7);
   TM.getFaces().addAll(0, 0, 5, 5, 1, 1, 1, 1, 6, 6, 2, 2, 2, 2, 7, 7, 3, 3,
    0, 0, 5, 5, 4, 4, 1, 1, 6, 6, 5, 5, 2, 2, 7, 7, 6, 6);
  } else if (vertexQuantity == 10) {
   TM.getFaces().addAll(0, 0, 1, 1, 6, 6, 1, 1, 2, 2, 7, 7, 2, 2, 3, 3, 8, 8, 3, 3, 4, 4, 9, 9,
    0, 0, 5, 5, 6, 6, 1, 1, 6, 6, 7, 7, 2, 2, 7, 7, 8, 8, 3, 3, 8, 8, 9, 9);
   TM.getFaces().addAll(0, 0, 6, 6, 1, 1, 1, 1, 7, 7, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 9, 9, 4, 4,
    0, 0, 6, 6, 5, 5, 1, 1, 7, 7, 6, 6, 2, 2, 8, 8, 7, 7, 3, 3, 9, 9, 8, 8);
  } else if (vertexQuantity == 12) {
   TM.getFaces().addAll(0, 0, 1, 1, 7, 7, 1, 1, 2, 2, 8, 8, 2, 2, 3, 3, 9, 9, 3, 3, 4, 4, 10, 10, 4, 4, 5, 5, 11, 11,
    0, 0, 6, 6, 7, 7, 1, 1, 7, 7, 8, 8, 2, 2, 8, 8, 9, 9, 3, 3, 9, 9, 10, 10, 4, 4, 10, 10, 11, 11);
   TM.getFaces().addAll(0, 0, 7, 7, 1, 1, 1, 1, 8, 8, 2, 2, 2, 2, 9, 9, 3, 3, 3, 3, 10, 10, 4, 4, 4, 4, 11, 11, 5, 5,
    0, 0, 7, 7, 6, 6, 1, 1, 8, 8, 7, 7, 2, 2, 9, 9, 8, 8, 3, 3, 10, 10, 9, 9, 4, 4, 11, 11, 10, 10);
  } else if (vertexQuantity == 14) {
   TM.getFaces().addAll(0, 0, 1, 1, 8, 8, 1, 1, 2, 2, 9, 9, 2, 2, 3, 3, 10, 10, 3, 3, 4, 4, 11, 11, 4, 4, 5, 5, 12, 12, 5, 5, 6, 6, 13, 13,
    0, 0, 7, 7, 8, 8, 1, 1, 8, 8, 9, 9, 2, 2, 9, 9, 10, 10, 3, 3, 10, 10, 11, 11, 4, 4, 11, 11, 12, 12, 5, 5, 12, 12, 13, 13);
   TM.getFaces().addAll(0, 0, 8, 8, 1, 1, 1, 1, 9, 9, 2, 2, 2, 2, 10, 10, 3, 3, 3, 3, 11, 11, 4, 4, 4, 4, 12, 12, 5, 5, 5, 5, 13, 13, 6, 6,
    0, 0, 8, 8, 7, 7, 1, 1, 9, 9, 8, 8, 2, 2, 10, 10, 9, 9, 3, 3, 11, 11, 10, 10, 4, 4, 12, 12, 11, 11, 5, 5, 13, 13, 12, 12);
  } else if (vertexQuantity == 16) {
   TM.getFaces().addAll(0, 0, 1, 1, 9, 9, 1, 1, 2, 2, 10, 10, 2, 2, 3, 3, 11, 11, 3, 3, 4, 4, 12, 12, 4, 4, 5, 5, 13, 13, 5, 5, 6, 6, 14, 14, 6, 6, 7, 7, 15, 15,
    0, 0, 8, 8, 9, 9, 1, 1, 9, 9, 10, 10, 2, 2, 10, 10, 11, 11, 3, 3, 11, 11, 12, 12, 4, 4, 12, 12, 13, 13, 5, 5, 13, 13, 14, 14, 6, 6, 14, 14, 15, 15);
   TM.getFaces().addAll(0, 0, 9, 9, 1, 1, 1, 1, 10, 10, 2, 2, 2, 2, 11, 11, 3, 3, 3, 3, 12, 12, 4, 4, 4, 4, 13, 13, 5, 5, 5, 5, 14, 14, 6, 6, 6, 6, 15, 15, 7, 7,
    0, 0, 9, 9, 8, 8, 1, 1, 10, 10, 9, 9, 2, 2, 11, 11, 10, 10, 3, 3, 12, 12, 11, 11, 4, 4, 13, 13, 12, 12, 5, 5, 14, 14, 13, 13, 6, 6, 15, 15, 14, 14);
  } else if (vertexQuantity == 18) {
   TM.getFaces().addAll(0, 0, 1, 1, 10, 10, 1, 1, 2, 2, 11, 11, 2, 2, 3, 3, 12, 12, 3, 3, 4, 4, 13, 13, 4, 4, 5, 5, 14, 14, 5, 5, 6, 6, 15, 15, 6, 6, 7, 7, 16, 16, 7, 7, 8, 8, 17, 17,
    0, 0, 9, 9, 10, 10, 1, 1, 10, 10, 11, 11, 2, 2, 11, 11, 12, 12, 3, 3, 12, 12, 13, 13, 4, 4, 13, 13, 14, 14, 5, 5, 14, 14, 15, 15, 6, 6, 15, 15, 16, 16, 7, 7, 16, 16, 17, 17);
   TM.getFaces().addAll(0, 0, 10, 10, 1, 1, 1, 1, 11, 11, 2, 2, 2, 2, 12, 12, 3, 3, 3, 3, 13, 13, 4, 4, 4, 4, 14, 14, 5, 5, 5, 5, 15, 15, 6, 6, 6, 6, 16, 16, 7, 7, 7, 7, 17, 17, 8, 8,
    0, 0, 10, 10, 9, 9, 1, 1, 11, 11, 10, 10, 2, 2, 12, 12, 11, 11, 3, 3, 13, 13, 12, 12, 4, 4, 14, 14, 13, 13, 5, 5, 15, 15, 14, 14, 6, 6, 16, 16, 15, 15, 7, 7, 17, 17, 16, 16);
  } else if (vertexQuantity == 20) {
   TM.getFaces().addAll(0, 0, 1, 1, 11, 11, 1, 1, 2, 2, 12, 12, 2, 2, 3, 3, 13, 13, 3, 3, 4, 4, 14, 14, 4, 4, 5, 5, 15, 15, 5, 5, 6, 6, 16, 16, 6, 6, 7, 7, 17, 17, 7, 7, 8, 8, 18, 18, 8, 8, 9, 9, 19, 19,
    0, 0, 10, 10, 11, 11, 1, 1, 11, 11, 12, 12, 2, 2, 12, 12, 13, 13, 3, 3, 13, 13, 14, 14, 4, 4, 14, 14, 15, 15, 5, 5, 15, 15, 16, 16, 6, 6, 16, 16, 17, 17, 7, 7, 17, 17, 18, 18, 8, 8, 18, 18, 19, 19);
   TM.getFaces().addAll(0, 0, 11, 11, 1, 1, 1, 1, 12, 12, 2, 2, 2, 2, 13, 13, 3, 3, 3, 3, 14, 14, 4, 4, 4, 4, 15, 15, 5, 5, 5, 5, 16, 16, 6, 6, 6, 6, 17, 17, 7, 7, 7, 7, 18, 18, 8, 8, 8, 8, 19, 19, 9, 9,
    0, 0, 11, 11, 10, 10, 1, 1, 12, 12, 11, 11, 2, 2, 13, 13, 12, 12, 3, 3, 14, 14, 13, 13, 4, 4, 15, 15, 14, 14, 5, 5, 16, 16, 15, 15, 6, 6, 17, 17, 16, 16, 7, 7, 18, 18, 17, 17, 8, 8, 19, 19, 18, 18);
  } else if (vertexQuantity == 22) {
   TM.getFaces().addAll(0, 0, 1, 1, 12, 12, 1, 1, 2, 2, 13, 13, 2, 2, 3, 3, 14, 14, 3, 3, 4, 4, 15, 15, 4, 4, 5, 5, 16, 16, 5, 5, 6, 6, 17, 17, 6, 6, 7, 7, 18, 18, 7, 7, 8, 8, 19, 19, 8, 8, 9, 9, 20, 20, 9, 9, 10, 10, 21, 21,
    0, 0, 11, 11, 12, 12, 1, 1, 12, 12, 13, 13, 2, 2, 13, 13, 14, 14, 3, 3, 14, 14, 15, 15, 4, 4, 15, 15, 16, 16, 5, 5, 16, 16, 17, 17, 6, 6, 17, 17, 18, 18, 7, 7, 18, 18, 19, 19, 8, 8, 19, 19, 20, 20, 9, 9, 20, 20, 21, 21);
   TM.getFaces().addAll(0, 0, 12, 12, 1, 1, 1, 1, 13, 13, 2, 2, 2, 2, 14, 14, 3, 3, 3, 3, 15, 15, 4, 4, 4, 4, 16, 16, 5, 5, 5, 5, 17, 17, 6, 6, 6, 6, 18, 18, 7, 7, 7, 7, 19, 19, 8, 8, 8, 8, 20, 20, 9, 9, 9, 9, 21, 21, 10, 10,
    0, 0, 12, 12, 11, 11, 1, 1, 13, 13, 12, 12, 2, 2, 14, 14, 13, 13, 3, 3, 15, 15, 14, 14, 4, 4, 16, 16, 15, 15, 5, 5, 17, 17, 16, 16, 6, 6, 18, 18, 17, 17, 7, 7, 19, 19, 18, 18, 8, 8, 20, 20, 19, 19, 9, 9, 21, 21, 20, 20);
  } else if (vertexQuantity == 24) {
   TM.getFaces().addAll(0, 0, 1, 1, 13, 13, 1, 1, 2, 2, 14, 14, 2, 2, 3, 3, 15, 15, 3, 3, 4, 4, 16, 16, 4, 4, 5, 5, 17, 17, 5, 5, 6, 6, 18, 18, 6, 6, 7, 7, 19, 19, 7, 7, 8, 8, 20, 20, 8, 8, 9, 9, 21, 21, 9, 9, 10, 10, 22, 22, 10, 10, 11, 11, 23, 23,
    0, 0, 12, 12, 13, 13, 1, 1, 13, 13, 14, 14, 2, 2, 14, 14, 15, 15, 3, 3, 15, 15, 16, 16, 4, 4, 16, 16, 17, 17, 5, 5, 17, 17, 18, 18, 6, 6, 18, 18, 19, 19, 7, 7, 19, 19, 20, 20, 8, 8, 20, 20, 21, 21, 9, 9, 21, 21, 22, 22, 10, 10, 22, 22, 23, 23);
   TM.getFaces().addAll(0, 0, 13, 13, 1, 1, 1, 1, 14, 14, 2, 2, 2, 2, 15, 15, 3, 3, 3, 3, 16, 16, 4, 4, 4, 4, 17, 17, 5, 5, 5, 5, 18, 18, 6, 6, 6, 6, 19, 19, 7, 7, 7, 7, 20, 20, 8, 8, 8, 8, 21, 21, 9, 9, 9, 9, 22, 22, 10, 10, 10, 10, 23, 23, 11, 11,
    0, 0, 13, 13, 12, 12, 1, 1, 14, 14, 13, 13, 2, 2, 15, 15, 14, 14, 3, 3, 16, 16, 15, 15, 4, 4, 17, 17, 16, 16, 5, 5, 18, 18, 17, 17, 6, 6, 19, 19, 18, 18, 7, 7, 20, 20, 19, 19, 8, 8, 21, 21, 20, 20, 9, 9, 22, 22, 21, 21, 10, 10, 23, 23, 22, 22);
  } else if (vertexQuantity == 26) {
   TM.getFaces().addAll(0, 0, 1, 1, 14, 14, 1, 1, 2, 2, 15, 15, 2, 2, 3, 3, 16, 16, 3, 3, 4, 4, 17, 17, 4, 4, 5, 5, 18, 18, 5, 5, 6, 6, 19, 19, 6, 6, 7, 7, 20, 20, 7, 7, 8, 8, 21, 21, 8, 8, 9, 9, 22, 22, 9, 9, 10, 10, 23, 23, 10, 10, 11, 11, 24, 24, 11, 11, 12, 12, 25, 25,
    0, 0, 13, 13, 14, 14, 1, 1, 14, 14, 15, 15, 2, 2, 15, 15, 16, 16, 3, 3, 16, 16, 17, 17, 4, 4, 17, 17, 18, 18, 5, 5, 18, 18, 19, 19, 6, 6, 19, 19, 20, 20, 7, 7, 20, 20, 21, 21, 8, 8, 21, 21, 22, 22, 9, 9, 22, 22, 23, 23, 10, 10, 23, 23, 24, 24, 11, 11, 24, 24, 25, 25);
   TM.getFaces().addAll(0, 0, 14, 14, 1, 1, 1, 1, 15, 15, 2, 2, 2, 2, 16, 16, 3, 3, 3, 3, 17, 17, 4, 4, 4, 4, 18, 18, 5, 5, 5, 5, 19, 19, 6, 6, 6, 6, 20, 20, 7, 7, 7, 7, 21, 21, 8, 8, 8, 8, 22, 22, 9, 9, 9, 9, 23, 23, 10, 10, 10, 10, 24, 24, 11, 11, 11, 11, 25, 25, 12, 12,
    0, 0, 14, 14, 13, 13, 1, 1, 15, 15, 14, 14, 2, 2, 16, 16, 15, 15, 3, 3, 17, 17, 16, 16, 4, 4, 18, 18, 17, 17, 5, 5, 19, 19, 18, 18, 6, 6, 20, 20, 19, 19, 7, 7, 21, 21, 20, 20, 8, 8, 22, 22, 21, 21, 9, 9, 23, 23, 22, 22, 10, 10, 24, 24, 23, 23, 11, 11, 25, 25, 24, 24);
  } else if (vertexQuantity == 32) {
   TM.getFaces().addAll(0, 0, 1, 1, 17, 17, 1, 1, 2, 2, 18, 18, 2, 2, 3, 3, 19, 19, 3, 3, 4, 4, 20, 20, 4, 4, 5, 5, 21, 21, 5, 5, 6, 6, 22, 22, 6, 6, 7, 7, 23, 23, 7, 7, 8, 8, 24, 24, 8, 8, 9, 9, 25, 25, 9, 9, 10, 10, 26, 26, 10, 10, 11, 11, 27, 27, 11, 11, 12, 12, 28, 28, 12, 12, 13, 13, 29, 29, 13, 13, 14, 14, 30, 30, 14, 14, 15, 15, 31, 31,
    0, 0, 16, 16, 17, 17, 1, 1, 17, 17, 18, 18, 2, 2, 18, 18, 19, 19, 3, 3, 19, 19, 20, 20, 4, 4, 20, 20, 21, 21, 5, 5, 21, 21, 22, 22, 6, 6, 22, 22, 23, 23, 7, 7, 23, 23, 24, 24, 8, 8, 24, 24, 25, 25, 9, 9, 25, 25, 26, 26, 10, 10, 26, 26, 27, 27, 11, 11, 27, 27, 28, 28, 12, 12, 28, 28, 29, 29, 13, 13, 29, 29, 30, 30, 14, 14, 30, 30, 31, 31);
   TM.getFaces().addAll(0, 0, 17, 17, 1, 1, 1, 1, 18, 18, 2, 2, 2, 2, 19, 19, 3, 3, 3, 3, 20, 20, 4, 4, 4, 4, 21, 21, 5, 5, 5, 5, 22, 22, 6, 6, 6, 6, 23, 23, 7, 7, 7, 7, 24, 24, 8, 8, 8, 8, 25, 25, 9, 9, 9, 9, 26, 26, 10, 10, 10, 10, 27, 27, 11, 11, 11, 11, 28, 28, 12, 12, 12, 12, 29, 29, 13, 13, 13, 13, 30, 30, 14, 14, 14, 14, 31, 31, 15, 15,
    0, 0, 17, 17, 16, 16, 1, 1, 18, 18, 17, 17, 2, 2, 19, 19, 18, 18, 3, 3, 20, 20, 19, 19, 4, 4, 21, 21, 20, 20, 5, 5, 22, 22, 21, 21, 6, 6, 23, 23, 22, 22, 7, 7, 24, 24, 23, 23, 8, 8, 25, 25, 24, 24, 9, 9, 26, 26, 25, 25, 10, 10, 27, 27, 26, 26, 11, 11, 28, 28, 27, 27, 12, 12, 29, 29, 28, 28, 13, 13, 30, 30, 29, 29, 14, 14, 31, 31, 30, 30);
  } else if (vertexQuantity == 38) {
   TM.getFaces().addAll(0, 0, 1, 1, 20, 20, 1, 1, 2, 2, 21, 21, 2, 2, 3, 3, 22, 22, 3, 3, 4, 4, 23, 23, 4, 4, 5, 5, 24, 24, 5, 5, 6, 6, 25, 25, 6, 6, 7, 7, 26, 26, 7, 7, 8, 8, 27, 27, 8, 8, 9, 9, 28, 28, 9, 9, 10, 10, 29, 29, 10, 10, 11, 11, 30, 30, 11, 11, 12, 12, 31, 31, 12, 12, 13, 13, 32, 32, 13, 13, 14, 14, 33, 33, 14, 14, 15, 15, 34, 34, 15, 15, 16, 16, 35, 35, 16, 16, 17, 17, 36, 36, 17, 17, 18, 18, 37, 37,
    0, 0, 19, 19, 20, 20, 1, 1, 20, 20, 21, 21, 2, 2, 21, 21, 22, 22, 3, 3, 22, 22, 23, 23, 4, 4, 23, 23, 24, 24, 5, 5, 24, 24, 25, 25, 6, 6, 25, 25, 26, 26, 7, 7, 26, 26, 27, 27, 8, 8, 27, 27, 28, 28, 9, 9, 28, 28, 29, 29, 10, 10, 29, 29, 30, 30, 11, 11, 30, 30, 31, 31, 12, 12, 31, 31, 32, 32, 13, 13, 32, 32, 33, 33, 14, 14, 33, 33, 34, 34, 15, 15, 34, 34, 35, 35, 16, 16, 35, 35, 36, 36, 17, 17, 36, 36, 37, 37);
   TM.getFaces().addAll(0, 0, 20, 20, 1, 1, 1, 1, 21, 21, 2, 2, 2, 2, 22, 22, 3, 3, 3, 3, 23, 23, 4, 4, 4, 4, 24, 24, 5, 5, 5, 5, 25, 25, 6, 6, 6, 6, 26, 26, 7, 7, 7, 7, 27, 27, 8, 8, 8, 8, 28, 28, 9, 9, 9, 9, 29, 29, 10, 10, 10, 10, 30, 30, 11, 11, 11, 11, 31, 31, 12, 12, 12, 12, 32, 32, 13, 13, 13, 13, 33, 33, 14, 14, 14, 14, 34, 34, 15, 15, 15, 15, 35, 35, 16, 16, 16, 16, 36, 36, 17, 17, 17, 17, 37, 37, 18, 18,
    0, 0, 20, 20, 19, 19, 1, 1, 21, 21, 20, 20, 2, 2, 22, 22, 21, 21, 3, 3, 23, 23, 22, 22, 4, 4, 24, 24, 23, 23, 5, 5, 25, 25, 24, 24, 6, 6, 26, 26, 25, 25, 7, 7, 27, 27, 26, 26, 8, 8, 28, 28, 27, 27, 9, 9, 29, 29, 28, 28, 10, 10, 30, 30, 29, 29, 11, 11, 31, 31, 30, 30, 12, 12, 32, 32, 31, 31, 13, 13, 33, 33, 32, 32, 14, 14, 34, 34, 33, 33, 15, 15, 35, 35, 34, 34, 16, 16, 36, 36, 35, 35, 17, 17, 37, 37, 36, 36);
  } else if (vertexQuantity == 40) {
   TM.getFaces().addAll(0, 0, 1, 1, 21, 21, 1, 1, 2, 2, 22, 22, 2, 2, 3, 3, 23, 23, 3, 3, 4, 4, 24, 24, 4, 4, 5, 5, 25, 25, 5, 5, 6, 6, 26, 26, 6, 6, 7, 7, 27, 27, 7, 7, 8, 8, 28, 28, 8, 8, 9, 9, 29, 29, 9, 9, 10, 10, 30, 30, 10, 10, 11, 11, 31, 31, 11, 11, 12, 12, 32, 32, 12, 12, 13, 13, 33, 33, 13, 13, 14, 14, 34, 34, 14, 14, 15, 15, 35, 35, 15, 15, 16, 16, 36, 36, 16, 16, 17, 17, 37, 37, 17, 17, 18, 18, 38, 38, 18, 18, 19, 19, 39, 39,
    0, 0, 20, 20, 21, 21, 1, 1, 21, 21, 22, 22, 2, 2, 22, 22, 23, 23, 3, 3, 23, 23, 24, 24, 4, 4, 24, 24, 25, 25, 5, 5, 25, 25, 26, 26, 6, 6, 26, 26, 27, 27, 7, 7, 27, 27, 28, 28, 8, 8, 28, 28, 29, 29, 9, 9, 29, 29, 30, 30, 10, 10, 30, 30, 31, 31, 11, 11, 31, 31, 32, 32, 12, 12, 32, 32, 33, 33, 13, 13, 33, 33, 34, 34, 14, 14, 34, 34, 35, 35, 15, 15, 35, 35, 36, 36, 16, 16, 36, 36, 37, 37, 17, 17, 37, 37, 38, 38, 18, 18, 38, 38, 39, 39);
   TM.getFaces().addAll(0, 0, 21, 21, 1, 1, 1, 1, 22, 22, 2, 2, 2, 2, 23, 23, 3, 3, 3, 3, 24, 24, 4, 4, 4, 4, 25, 25, 5, 5, 5, 5, 26, 26, 6, 6, 6, 6, 27, 27, 7, 7, 7, 7, 28, 28, 8, 8, 8, 8, 29, 29, 9, 9, 9, 9, 30, 30, 10, 10, 10, 10, 31, 31, 11, 11, 11, 11, 32, 32, 12, 12, 12, 12, 33, 33, 13, 13, 13, 13, 34, 34, 14, 14, 14, 14, 35, 35, 15, 15, 15, 15, 36, 36, 16, 16, 16, 16, 37, 37, 17, 17, 17, 17, 38, 38, 18, 18, 18, 18, 39, 39, 19, 19,
    0, 0, 21, 21, 20, 20, 1, 1, 22, 22, 21, 21, 2, 2, 23, 23, 22, 22, 3, 3, 24, 24, 23, 23, 4, 4, 25, 25, 24, 24, 5, 5, 26, 26, 25, 25, 6, 6, 27, 27, 26, 26, 7, 7, 28, 28, 27, 27, 8, 8, 29, 29, 28, 28, 9, 9, 30, 30, 31, 31, 10, 10, 31, 31, 30, 30, 11, 11, 32, 32, 31, 31, 12, 12, 33, 33, 32, 32, 13, 13, 34, 34, 33, 33, 14, 14, 35, 35, 34, 34, 15, 15, 36, 36, 35, 35, 16, 16, 37, 37, 36, 36, 17, 17, 38, 38, 37, 37, 18, 18, 39, 39, 38, 38);
  }
 }

 protected void setGrid(long vertexQuantity) {
  if (vertexQuantity == 8) {
   TM.getFaces().addAll(0, 0, 1, 1, 4, 4, 2, 2, 3, 3, 6, 6,
    4, 4, 5, 5, 1, 1, 6, 6, 7, 7, 3, 3);
   TM.getFaces().addAll(0, 0, 4, 4, 1, 1, 2, 2, 6, 6, 3, 3,
    4, 4, 1, 1, 5, 5, 6, 5, 3, 3, 7, 7);
  } else if (vertexQuantity == 12) {
   TM.getFaces().addAll(0, 0, 1, 1, 6, 6, 2, 2, 3, 3, 8, 8, 4, 4, 5, 5, 10, 10,
    6, 6, 7, 7, 1, 1, 8, 8, 9, 9, 3, 3, 10, 10, 11, 11, 5, 5);
   TM.getFaces().addAll(0, 0, 6, 6, 1, 1, 2, 2, 8, 8, 3, 3, 4, 4, 10, 10, 5, 5,
    6, 6, 1, 1, 7, 7, 8, 8, 3, 3, 9, 9, 10, 10, 5, 5, 11, 11);
  } else if (vertexQuantity == 16) {
   TM.getFaces().addAll(0, 0, 1, 1, 8, 8, 2, 2, 3, 3, 10, 10, 4, 4, 5, 5, 12, 12, 6, 6, 7, 7, 14, 14,
    8, 8, 9, 9, 1, 1, 10, 10, 11, 11, 3, 3, 12, 12, 13, 13, 5, 5, 14, 14, 15, 15, 7, 7);
   TM.getFaces().addAll(0, 0, 8, 8, 1, 1, 2, 2, 10, 10, 3, 3, 4, 4, 12, 12, 5, 5, 6, 6, 14, 14, 7, 7,
    8, 8, 1, 1, 9, 9, 10, 10, 3, 3, 11, 11, 12, 12, 5, 5, 13, 13, 14, 14, 7, 7, 15, 15);
  } else if (vertexQuantity == 20) {
   TM.getFaces().addAll(0, 0, 1, 1, 10, 10, 2, 2, 3, 3, 12, 12, 4, 4, 5, 5, 14, 14, 6, 6, 7, 7, 16, 16, 8, 8, 9, 9, 18, 18,
    10, 10, 11, 11, 1, 1, 12, 12, 13, 13, 3, 3, 14, 14, 15, 15, 5, 5, 16, 16, 17, 17, 7, 7, 18, 18, 19, 19, 9, 9);
   TM.getFaces().addAll(0, 0, 10, 10, 1, 1, 2, 2, 12, 12, 3, 3, 4, 4, 14, 14, 5, 5, 6, 6, 16, 16, 7, 7, 8, 8, 18, 18, 9, 9,
    10, 10, 1, 1, 11, 11, 12, 12, 3, 3, 13, 13, 14, 14, 5, 5, 15, 15, 16, 16, 7, 7, 17, 17, 18, 18, 9, 9, 19, 19);
  } else if (vertexQuantity == 24) {
   TM.getFaces().addAll(0, 0, 1, 1, 12, 12, 2, 2, 3, 3, 14, 14, 4, 4, 5, 5, 16, 16, 6, 6, 7, 7, 18, 18, 8, 8, 9, 9, 20, 20, 10, 10, 11, 11, 22, 22,
    12, 12, 13, 13, 1, 1, 14, 14, 15, 15, 3, 3, 16, 16, 17, 17, 5, 5, 18, 18, 19, 19, 7, 7, 20, 20, 21, 21, 9, 9, 22, 22, 23, 23, 11, 11);
   TM.getFaces().addAll(0, 0, 12, 12, 1, 1, 2, 2, 14, 14, 3, 3, 4, 4, 16, 16, 5, 5, 6, 6, 18, 18, 7, 7, 8, 8, 20, 20, 9, 9, 10, 10, 22, 22, 11, 11,
    12, 12, 1, 1, 13, 13, 14, 14, 3, 3, 15, 15, 16, 16, 5, 5, 17, 17, 18, 18, 7, 7, 19, 19, 20, 20, 9, 9, 21, 21, 22, 22, 11, 11, 23, 23);
  } else if (vertexQuantity == 28) {
   TM.getFaces().addAll(0, 0, 1, 1, 14, 14, 2, 2, 3, 3, 16, 16, 4, 4, 5, 5, 18, 18, 6, 6, 7, 7, 20, 20, 8, 8, 9, 9, 22, 22, 10, 10, 11, 11, 24, 24, 12, 12, 13, 13, 26, 26,
    14, 14, 15, 15, 1, 1, 16, 16, 17, 17, 3, 3, 18, 18, 19, 19, 5, 5, 20, 20, 21, 21, 7, 7, 22, 22, 23, 23, 9, 9, 24, 24, 25, 25, 11, 11, 26, 26, 27, 27, 13, 13);
   TM.getFaces().addAll(0, 0, 14, 14, 1, 1, 2, 2, 16, 16, 3, 3, 4, 4, 18, 18, 5, 5, 6, 6, 20, 20, 7, 7, 8, 8, 22, 22, 9, 9, 10, 10, 24, 24, 11, 11, 12, 12, 26, 26, 13, 13,
    14, 14, 1, 1, 15, 15, 16, 16, 3, 3, 17, 17, 18, 18, 5, 5, 19, 19, 20, 20, 7, 7, 21, 21, 22, 22, 9, 9, 23, 23, 24, 24, 11, 11, 25, 25, 26, 26, 13, 13, 27, 27);
  } else if (vertexQuantity == 32) {
   TM.getFaces().addAll(0, 0, 1, 1, 16, 16, 2, 2, 3, 3, 18, 18, 4, 4, 5, 5, 20, 20, 6, 6, 7, 7, 22, 22, 8, 8, 9, 9, 24, 24, 10, 10, 11, 11, 26, 26, 12, 12, 13, 13, 28, 28, 14, 14, 15, 15, 30, 30,
    16, 16, 17, 17, 1, 1, 18, 18, 19, 19, 3, 3, 20, 20, 21, 21, 5, 5, 22, 22, 23, 23, 7, 7, 24, 24, 25, 25, 9, 9, 26, 26, 27, 27, 11, 11, 28, 28, 29, 29, 13, 13, 30, 30, 31, 31, 15, 15);
   TM.getFaces().addAll(0, 0, 16, 16, 1, 1, 2, 2, 18, 18, 3, 3, 4, 4, 20, 20, 5, 5, 6, 6, 22, 22, 7, 7, 8, 8, 24, 24, 9, 9, 10, 10, 26, 26, 11, 11, 12, 12, 28, 28, 13, 13, 14, 14, 30, 30, 15, 15,
    16, 16, 1, 1, 17, 17, 18, 18, 3, 3, 19, 19, 20, 20, 5, 5, 21, 21, 22, 22, 7, 7, 23, 23, 24, 24, 9, 9, 25, 25, 26, 26, 11, 11, 27, 27, 28, 28, 13, 13, 29, 29, 30, 30, 15, 15, 31, 31);
  } else if (vertexQuantity == 36) {
   TM.getFaces().addAll(0, 0, 1, 1, 18, 18, 2, 2, 3, 3, 20, 20, 4, 4, 5, 5, 22, 22, 6, 6, 7, 7, 24, 24, 8, 8, 9, 9, 26, 26, 10, 10, 11, 11, 28, 28, 12, 12, 13, 13, 30, 30, 14, 14, 15, 15, 32, 32, 16, 16, 17, 17, 34, 34,
    18, 18, 19, 19, 1, 1, 20, 20, 21, 21, 3, 3, 22, 22, 23, 23, 5, 5, 24, 24, 25, 25, 7, 7, 26, 26, 27, 27, 9, 9, 28, 28, 29, 29, 11, 11, 30, 30, 31, 31, 13, 13, 32, 32, 33, 33, 15, 15, 34, 34, 35, 35, 17, 17);
   TM.getFaces().addAll(0, 0, 18, 18, 1, 1, 2, 2, 20, 20, 3, 3, 4, 4, 22, 22, 5, 5, 6, 6, 24, 24, 7, 7, 8, 8, 26, 26, 9, 9, 10, 10, 28, 28, 11, 11, 12, 12, 30, 30, 13, 13, 14, 14, 32, 32, 15, 15, 16, 16, 34, 34, 17, 17,
    18, 18, 1, 1, 19, 19, 20, 20, 3, 3, 21, 21, 22, 22, 5, 5, 23, 23, 24, 24, 7, 7, 25, 25, 26, 26, 9, 9, 27, 27, 28, 28, 11, 11, 29, 29, 30, 30, 13, 13, 31, 31, 32, 32, 15, 15, 33, 33, 34, 34, 17, 17, 35, 35);
  } else if (vertexQuantity == 40) {
   TM.getFaces().addAll(0, 0, 1, 1, 20, 20, 2, 2, 3, 3, 22, 22, 4, 4, 5, 5, 24, 24, 6, 6, 7, 7, 26, 26, 8, 8, 9, 9, 28, 28, 10, 10, 11, 11, 30, 30, 12, 12, 13, 13, 32, 32, 14, 14, 15, 15, 34, 34, 16, 16, 17, 17, 36, 36, 18, 18, 19, 19, 38, 38,
    20, 20, 21, 21, 1, 1, 22, 22, 23, 23, 3, 3, 24, 24, 25, 25, 5, 5, 26, 26, 27, 27, 7, 7, 28, 28, 29, 29, 9, 9, 30, 30, 31, 31, 11, 11, 32, 32, 33, 33, 13, 13, 34, 34, 35, 35, 15, 15, 36, 36, 37, 37, 17, 17, 38, 38, 39, 39, 19, 19);
   TM.getFaces().addAll(0, 0, 20, 20, 1, 1, 2, 2, 22, 22, 3, 3, 4, 4, 24, 24, 5, 5, 6, 6, 26, 26, 7, 7, 8, 8, 28, 28, 9, 9, 10, 10, 30, 30, 11, 11, 12, 12, 32, 32, 13, 13, 14, 14, 34, 34, 15, 15, 16, 16, 36, 36, 17, 17, 18, 18, 38, 38, 19, 19,
    20, 20, 1, 1, 21, 21, 22, 22, 3, 3, 23, 23, 24, 24, 5, 5, 25, 25, 26, 26, 7, 7, 27, 27, 28, 28, 9, 9, 29, 29, 30, 30, 11, 11, 31, 31, 32, 32, 13, 13, 33, 33, 34, 34, 15, 15, 35, 35, 36, 36, 17, 17, 37, 37, 38, 38, 19, 19, 39, 39);
  }
 }

 protected void setTriangles(int vertexQuantity) {
  int[] faces = new int[vertexQuantity * 4];
  int baseCoordinate = 0;
  for (int n = 0; n < vertexQuantity * 2; n += 6) {
   faces[n] = baseCoordinate;
   faces[n + 1] = baseCoordinate;
   faces[n + 2] = baseCoordinate + 1;
   faces[n + 3] = baseCoordinate + 1;
   faces[n + 4] = baseCoordinate + 2;
   faces[n + 5] = baseCoordinate + 2;
   baseCoordinate += 3;
  }
  baseCoordinate = 0;
  for (int n = vertexQuantity * 2; n < vertexQuantity * 4; n += 6) {
   faces[n] = baseCoordinate;
   faces[n + 1] = baseCoordinate;
   faces[n + 2] = baseCoordinate + 2;
   faces[n + 3] = baseCoordinate + 2;
   faces[n + 4] = baseCoordinate + 1;
   faces[n + 5] = baseCoordinate + 1;
   baseCoordinate += 3;
  }
  TM.getFaces().addAll(faces);
 }

 protected void setWheelRingFaces() {
  int i = 48;
  TM.getFaces().addAll(0 + i, 0 + i, 1 + i, 1 + i, 25 + i, 25 + i, 1 + i, 1 + i, 2 + i, 2 + i, 26 + i, 26 + i, 2 + i, 2 + i, 3 + i, 3 + i, 27 + i, 27 + i, 3 + i, 3 + i, 4 + i, 4 + i, 28 + i, 28 + i, 4 + i, 4 + i, 5 + i, 5 + i, 29 + i, 29 + i, 5 + i, 5 + i, 6 + i, 6 + i, 30 + i, 30 + i, 6 + i, 6 + i, 7 + i, 7 + i, 31 + i, 31 + i, 7 + i, 7 + i, 8 + i, 8 + i, 32 + i, 32 + i, 8 + i, 8 + i, 9 + i, 9 + i, 33 + i, 33 + i, 9 + i, 9 + i, 10 + i, 10 + i, 34 + i, 34 + i, 10 + i, 10 + i, 11 + i, 11 + i, 35 + i, 35 + i, 11 + i, 11 + i, 12 + i, 12 + i, 36 + i, 36 + i, 12 + i, 12 + i, 13 + i, 13 + i, 37 + i, 37 + i, 13 + i, 13 + i, 14 + i, 14 + i, 38 + i, 38 + i, 14 + i, 14 + i, 15 + i, 15 + i, 39 + i, 39 + i, 15 + i, 15 + i, 16 + i, 16 + i, 40 + i, 40 + i, 16 + i, 16 + i, 17 + i, 17 + i, 41 + i, 41 + i, 17 + i, 17 + i, 18 + i, 18 + i, 42 + i, 42 + i, 18 + i, 18 + i, 19 + i, 19 + i, 43 + i, 43 + i, 19 + i, 19 + i, 20 + i, 20 + i, 44 + i, 44 + i, 20 + i, 20 + i, 21 + i, 21 + i, 45 + i, 45 + i, 21 + i, 21 + i, 22 + i, 22 + i, 46 + i, 46 + i, 22 + i, 22 + i, 23 + i, 23 + i, 47 + i, 47 + i, 23 + i, 23 + i, 0 + i, 0 + i, 24 + i, 24 + i,
   0 + i, 0 + i, 24 + i, 24 + i, 25 + i, 25 + i, 1 + i, 1 + i, 25 + i, 25 + i, 26 + i, 26 + i, 2 + i, 2 + i, 26 + i, 26 + i, 27 + i, 27 + i, 3 + i, 3 + i, 27 + i, 27 + i, 28 + i, 28 + i, 4 + i, 4 + i, 28 + i, 28 + i, 29 + i, 29 + i, 5 + i, 5 + i, 29 + i, 29 + i, 30 + i, 30 + i, 6 + i, 6 + i, 30 + i, 30 + i, 31 + i, 31 + i, 7 + i, 7 + i, 31 + i, 31 + i, 32 + i, 32 + i, 8 + i, 8 + i, 32 + i, 32 + i, 33 + i, 33 + i, 9 + i, 9 + i, 33 + i, 33 + i, 34 + i, 34 + i, 10 + i, 10 + i, 34 + i, 34 + i, 35 + i, 35 + i, 11 + i, 11 + i, 35 + i, 35 + i, 36 + i, 36 + i, 12 + i, 12 + i, 36 + i, 36 + i, 37 + i, 37 + i, 13 + i, 13 + i, 37 + i, 37 + i, 38 + i, 38 + i, 14 + i, 14 + i, 38 + i, 38 + i, 39 + i, 39 + i, 15 + i, 15 + i, 39 + i, 39 + i, 40 + i, 40 + i, 16 + i, 16 + i, 40 + i, 40 + i, 41 + i, 41 + i, 17 + i, 17 + i, 41 + i, 41 + i, 42 + i, 42 + i, 18 + i, 18 + i, 42 + i, 42 + i, 43 + i, 43 + i, 19 + i, 19 + i, 43 + i, 43 + i, 44 + i, 44 + i, 20 + i, 20 + i, 44 + i, 44 + i, 45 + i, 45 + i, 21 + i, 21 + i, 45 + i, 45 + i, 46 + i, 46 + i, 22 + i, 22 + i, 46 + i, 46 + i, 47 + i, 47 + i, 23 + i, 23 + i, 47 + i, 47 + i, 24 + i, 24 + i);
  TM.getFaces().addAll(0 + i, 0 + i, 25 + i, 25 + i, 1 + i, 1 + i, 1 + i, 1 + i, 26 + i, 26 + i, 2 + i, 2 + i, 2 + i, 2 + i, 27 + i, 27 + i, 3 + i, 3 + i, 3 + i, 3 + i, 28 + i, 28 + i, 4 + i, 4 + i, 4 + i, 4 + i, 29 + i, 29 + i, 5 + i, 5 + i, 5 + i, 5 + i, 30 + i, 30 + i, 6 + i, 6 + i, 6 + i, 6 + i, 31 + i, 31 + i, 7 + i, 7 + i, 7 + i, 7 + i, 32 + i, 32 + i, 8 + i, 8 + i, 8 + i, 8 + i, 33 + i, 33 + i, 9 + i, 9 + i, 9 + i, 9 + i, 34 + i, 34 + i, 10 + i, 10 + i, 10 + i, 10 + i, 35 + i, 35 + i, 11 + i, 11 + i, 11 + i, 11 + i, 36 + i, 36 + i, 12 + i, 12 + i, 12 + i, 12 + i, 37 + i, 37 + i, 13 + i, 13 + i, 13 + i, 13 + i, 38 + i, 38 + i, 14 + i, 14 + i, 14 + i, 14 + i, 39 + i, 39 + i, 15 + i, 15 + i, 15 + i, 15 + i, 40 + i, 40 + i, 16 + i, 16 + i, 16 + i, 16 + i, 41 + i, 41 + i, 17 + i, 17 + i, 17 + i, 17 + i, 42 + i, 42 + i, 18 + i, 18 + i, 18 + i, 18 + i, 43 + i, 43 + i, 19 + i, 19 + i, 19 + i, 19 + i, 44 + i, 44 + i, 20 + i, 20 + i, 20 + i, 20 + i, 45 + i, 45 + i, 21 + i, 21 + i, 21 + i, 21 + i, 46 + i, 46 + i, 22 + i, 22 + i, 22 + i, 22 + i, 47 + i, 47 + i, 23 + i, 23 + i, 23 + i, 23 + i, 24 + i, 24 + i, 0 + i, 0 + i,
   0 + i, 0 + i, 25 + i, 25 + i, 24 + i, 24 + i, 1 + i, 1 + i, 26 + i, 26 + i, 25 + i, 25 + i, 2 + i, 2 + i, 27 + i, 27 + i, 26 + i, 26 + i, 3 + i, 3 + i, 28 + i, 28 + i, 27 + i, 27 + i, 4 + i, 4 + i, 29 + i, 29 + i, 28 + i, 28 + i, 5 + i, 5 + i, 30 + i, 30 + i, 29 + i, 29 + i, 6 + i, 6 + i, 31 + i, 31 + i, 30 + i, 30 + i, 7 + i, 7 + i, 32 + i, 32 + i, 31 + i, 31 + i, 8 + i, 8 + i, 33 + i, 33 + i, 32 + i, 32 + i, 9 + i, 9 + i, 34 + i, 34 + i, 33 + i, 33 + i, 10 + i, 10 + i, 35 + i, 35 + i, 34 + i, 34 + i, 11 + i, 11 + i, 36 + i, 36 + i, 35 + i, 35 + i, 12 + i, 12 + i, 37 + i, 37 + i, 36 + i, 36 + i, 13 + i, 13 + i, 38 + i, 38 + i, 37 + i, 37 + i, 14 + i, 14 + i, 39 + i, 39 + i, 38 + i, 38 + i, 15 + i, 15 + i, 40 + i, 40 + i, 39 + i, 39 + i, 16 + i, 16 + i, 41 + i, 41 + i, 40 + i, 40 + i, 17 + i, 17 + i, 42 + i, 42 + i, 41 + i, 41 + i, 18 + i, 18 + i, 43 + i, 43 + i, 42 + i, 42 + i, 19 + i, 19 + i, 44 + i, 44 + i, 43 + i, 43 + i, 20 + i, 20 + i, 45 + i, 45 + i, 44 + i, 44 + i, 21 + i, 21 + i, 46 + i, 46 + i, 45 + i, 45 + i, 22 + i, 22 + i, 47 + i, 47 + i, 46 + i, 46 + i, 23 + i, 23 + i, 24 + i, 24 + i, 47 + i, 47 + i);
 }
}
